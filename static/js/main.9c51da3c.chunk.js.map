{"version":3,"sources":["Form/index.js","Tasks/index.js","Buttons/index.js","Section/index.js","Header/index.js","Container/index.js","App.js","reportWebVitals.js","index.js"],"names":["Form","className","placeholder","required","autoFocus","Tasks","props","tasks","map","task","done","taskHideDone","content","id","Buttons","length","hideTaskDone","autofocus","disabled","every","Section","title","extraContent","body","Header","Container","children","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2SAYeA,EAXF,kBACX,uBAAMC,UAAU,OAAhB,UACE,uBACEC,YAAY,wBACZD,UAAU,cACVE,UAAQ,EACRC,WAAS,IAEX,wBAAQH,UAAU,sBAAlB,+BCYWI,G,MApBD,SAACC,GAAD,OACZ,oBAAIL,UAAU,OAAd,SACGK,EAAMC,MAAMC,KAAI,SAACC,GAAD,OACf,qBACER,UAAS,oBACPQ,EAAKC,MAAQJ,EAAMK,aAAe,sBAAwB,IAF9D,UAME,wBAAQV,UAAU,kCAAlB,SACGQ,EAAKC,KAAO,SAAM,KAErB,sBAAMT,UAAS,oBAAeQ,EAAKC,KAAO,oBAAsB,IAAhE,SACGD,EAAKG,UAER,wBAAQX,UAAU,oCAAlB,4BARKQ,EAAKI,WCcHC,G,MApBC,SAACR,GACf,OAA2B,IAAvBA,EAAMC,MAAMQ,OACP,KAGP,sBAAKd,UAAU,UAAf,UACE,yBAAQA,UAAU,sBAAlB,UACGK,EAAMU,aAAe,aAAU,QADlC,kBACqD,OAErD,wBACEf,UAAU,sBACVgB,WAAS,EACTC,SAAUZ,EAAMC,MAAMY,OAAM,SAACV,GAAD,OAAUA,EAAKC,QAH7C,mCAJF,SCIWU,G,MATC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,aAAcC,EAAxB,EAAwBA,KAAxB,OACd,0BAAStB,UAAU,UAAnB,UACE,yBAAQA,UAAU,kBAAlB,UACE,oBAAIA,UAAU,mBAAd,SAAkCoB,IACjCC,KAEH,qBAAKrB,UAAU,mBAAf,SAAmCsB,SCHxBC,EALA,SAAC,GAAD,IAAGH,EAAH,EAAGA,MAAH,OACb,iCACE,6BAAKA,OCEMI,G,MAHG,SAACnB,GAAD,OAChB,sBAAML,UAAU,YAAhB,SAA6BK,EAAMoB,aCI/BnB,EAAQ,CACZ,CAAEM,GAAI,EAAGD,QAAS,mCAA+BF,MAAM,GACvD,CAAEG,GAAI,EAAGD,QAAS,gCAA4BF,MAAM,IAoBvCiB,MAff,WACE,OACE,eAAC,EAAD,WACE,cAAC,EAAD,CAAQN,MAAM,qBAEd,cAAC,EAAD,CAASA,MAAM,qBAAqBE,KAAM,cAAC,EAAD,MAC1C,cAAC,EAAD,CACEF,MAAM,mBACNC,aAAc,cAAC,EAAD,CAASf,MAAOA,EAAOI,aAVxB,QAWbY,KAAM,cAAC,EAAD,CAAOhB,MAAOA,EAAOI,aAXd,cCCNiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.9c51da3c.chunk.js","sourcesContent":["import \"./style.css\";\r\nconst Form = () => (\r\n  <form className=\"form\">\r\n    <input\r\n      placeholder=\"Co jest do zrobienia?\"\r\n      className=\"form__field\"\r\n      required\r\n      autoFocus\r\n    />\r\n    <button className=\"form__addTaskButton\">Dodaj zadanie</button>\r\n  </form>\r\n);\r\nexport default Form;\r\n","import \"./style.css\";\r\nconst Tasks = (props) => (\r\n  <ul className=\"list\">\r\n    {props.tasks.map((task) => (\r\n      <li\r\n        className={`list__item${\r\n          task.done && props.taskHideDone ? \" list__task--hidden\" : \"\"\r\n        }`}\r\n        key={task.id}\r\n      >\r\n        <button className=\"list__button list__button--done\">\r\n          {task.done ? \"âœ“\" : \"\"}\r\n        </button>\r\n        <span className={`list__task${task.done ? \" list__task--done\" : \"\"}`}>\r\n          {task.content}\r\n        </span>\r\n        <button className=\"list__button list__button--remove\">ðŸ—‘</button>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\nexport default Tasks;\r\n","import \"./style.css\";\r\n\r\nconst Buttons = (props) => {\r\n  if (props.tasks.length === 0) {\r\n    return null;\r\n  }\r\n  return (\r\n    <div className=\"buttons\">\r\n      <button className=\"buttons__btnElement\">\r\n        {props.hideTaskDone ? \"PokaÅ¼\" : \"Ukryj\"} ukoÅ„czone{\" \"}\r\n      </button>\r\n      <button\r\n        className=\"buttons__btnElement\"\r\n        autofocus\r\n        disabled={props.tasks.every((task) => task.done)}\r\n      >\r\n        UkoÅ„cz wszystkie\r\n      </button>\r\n      `\r\n    </div>\r\n  );\r\n};\r\nexport default Buttons;\r\n","import \"./style.css\";\r\n\r\nconst Section = ({ title, extraContent, body }) => (\r\n  <section className=\"section\">\r\n    <header className=\"section__header\">\r\n      <h2 className=\"section__heading\">{title}</h2>\r\n      {extraContent}\r\n    </header>\r\n    <div className=\"section__wrapper\">{body}</div>\r\n  </section>\r\n);\r\nexport default Section;\r\n","const Header = ({ title }) => (\r\n  <header>\r\n    <h1>{title}</h1>\r\n  </header>\r\n);\r\nexport default Header;\r\n","import \"./style.css\";\r\nconst Container = (props) => (\r\n  <main className=\"container\">{props.children}</main>\r\n);\r\nexport default Container;\r\n","import Form from \"./Form\";\nimport Tasks from \"./Tasks\";\nimport Buttons from \"./Buttons\";\nimport Section from \"./Section\";\nimport Header from \"./Header\";\nimport Container from \"./Container\";\nconst tasks = [\n  { id: 1, content: \"zrobiÄ‡ zadania z CSS battle\", done: true },\n  { id: 2, content: \"zrobiÄ‡ projekt na studia\", done: false },\n];\n\nconst taskHideDone = false;\n\nfunction App() {\n  return (\n    <Container>\n      <Header title=\"Lista zadaÅ„\" />\n\n      <Section title=\"Dodaj nowe zadanie\" body={<Form />} />\n      <Section\n        title=\"Lista zadaÅ„\"\n        extraContent={<Buttons tasks={tasks} taskHideDone={taskHideDone} />}\n        body={<Tasks tasks={tasks} taskHideDone={taskHideDone} />}\n      />\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}